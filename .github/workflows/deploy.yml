name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: us-west-2  # Set your AWS region here

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2  # Specify your region here

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: false
          registry-type: private
          skip-logout: false
          region: us-west-2  # Specify your region here

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: hello-world
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS service with new task definition
        env:
          AWS_REGION: us-west-2
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: hello-world
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo '{
            "containerDefinitions": [{
              "name": "hello-world",
              "image": "'$ECR_REGISTRY'/'$ECR_REPOSITORY':'$IMAGE_TAG'",
              "essential": true,
              "portMappings": [{
                "containerPort": 3000,
                "hostPort": 3000
              }]
            }],
            "family": "hello-world-task"
          }' > task-definition.json

          aws ecs register-task-definition \
            --cli-input-json file://task-definition.json

          aws ecs update-service \
            --cluster hello-world-cluster \
            --service hello-world-service \
            --force-new-deployment
